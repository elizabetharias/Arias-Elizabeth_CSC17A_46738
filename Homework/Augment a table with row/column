/* 
 * File:   main.cpp
 * Author: YOUR NAME HERE
 * Created on DATE AND TIME HERE
 * Purpose:  Sum Rows, Sum Columns, Grand Sum of an integer array
 */

//System Libraries Here
#include <iostream>//cin,cout
#include <iomanip> //setw(10)
using namespace std;

//User Libraries Here

//Global Constants Only, No Global Variables
//Allowed like PI, e, Gravity, conversions, array dimensions necessary
const int COLMAX=80;  //Max Columns much larger than needed.

//Function Prototypes Here
void read(int [][COLMAX],int &,int &);//Prompt for size then table
void sum(const int [][COLMAX],int,int,int[][COLMAX]);//Sum rows,col,grand total
void print(const int [][COLMAX],int,int,int);//Either table can be printed

//Program Execution Begins Here
int main(int argc, char** argv) {
    //Declare all Variables Here
    const int ROW=80;           //Max Rows much larger than needed
    int array[ROW][COLMAX]={};  //Declare original array
    int augAry[ROW][COLMAX]={}; //Actual augmented table row+1, col+1
    int row,col;                
    
    //Input the original table
    read(array,row,col);
    
    //Augment the original table by the sums
    sum(array,row,col,augAry);
    
    //Output the original array
    cout<<endl<<"The Original Array"<<endl;
    print(array,row,col,10);//setw(10)
    
    //Output the augmented array
    cout<<endl<<"The Augmented Array"<<endl;
    print(augAry,row+1,col+1,10);//setw(10)
    
    //Exit
    return 0;
}

void read(int array[][COLMAX],int &row,int &col)
{
    row = 0;
    col=0;
    cout << "Input a table and output the Augment row,col and total sums.\n";
    cout << "First input the number of rows and cols. <20 for each\n";
    cin >> row >> col;
    while(row >=20 || col>=20)
    {
        cout << "Error re-input the number of rows and columns";
    }
    cout << "Now input the table.\n";
        for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
                cin >> array[i][j];
            }
        }
}

void print(const int array[][COLMAX],int row,int col,int width)
{
   
    for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
                cout << right << setw(width) << array[i][j];
            }
            
            cout << endl;
        }
    
}

void sum(const int array[][COLMAX],int row,int col,int augArray[][COLMAX])
{
    int add = 0;
    // copy over array to augArray
    for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
               augArray[i][j] = array[i][j];
            }
        }
        
         for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
               add += augArray[i][j];
            }
         
            augArray[i][col] = add; //storing add at end of row
            add = 0; //storing in sum so it goes on the left
        }
        
        add = 0;
        
        for(int i=0; i<row; i++)
        {
            for(int j=0; j<col; j++)
            {
               add+= augArray[j][i];
            }
            
            augArray[row][i] = add; //storing add at end of row
            add = 0; //storing in sum so it goes on the left
        }
        
         for(int i=0; i<col; i++)
         {
             add+= augArray[row][i]; //ensure last row added as we alternate through cols
         }
         
         augArray[row][col] = add;
        
    
}

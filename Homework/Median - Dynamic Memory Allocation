#include <iostream>

int *getData(int &); //Return the array size and the array
void prntData(int &);//Print the integer array
float *median(int *, int);//Fill the median Array with the Float array size
void prntMed(float *);
using namespace std;

int main()
{
    int size;
    int * arr; //catch pointer to array
    float * arrMed;
    
	//your code here
	arr = getData(size); //load array we are returning
	cout << size;
/*	 for(int i=0; i<size; i++)
   {
      cout << arr[i]; //treat like regular arrray here
   }*/
arrMed = median(arr, size);



delete [] arr; //delete pointer to dynamic array created 
delete  [] arrMed; //delete pointer to dynamic array created 

	return 0;
}

int *getData(int &size)
{
    
    cin >> size; //size array
   int *array = new int [size]; //declare dynamic array
   for(int i=0; i<size; i++)
   {
      cin >> array[i]; //treat like regular arrray here
   }
   
   return array;
   
}

float *median(int * array, int size)
{
    float median;
    
    float * arr = new float [size+2];
    
    //Start loading two indices ahead
    for(int i=2; i<size+2; i++)
    {
        //Fill the median array with elements from int array and turn them into floats
        arr[i] = static_cast<float>(array[i-2]); //static_cast because we're loading int array to float arr
       // cout << arr[i];
    }
    
    for(int i=0;i<size-1;i++)
    {
        //Swap as you go to place the smallest element at the top
        for(int j=i+1;j<size;j++)
        {
            //Logic swap
            if(*(array+i)>*(array+j))
            {
                *(array+i)=*(array+i)^*(array+j);
                *(array+j)=*(array+i)^*(array+j);
                *(array+i)=*(array+i)^*(array+j);
            }
        }
    }
    
    if(size%2 == 0) //if even sized array
    {
       median  = static_cast<float>((array[(size-1)/2]+array[size/2]))/2;
    }
    
    else //if odd sized array
    {
        median = static_cast<float>(array[size/2]);
    }
    
    //load in size as an int to first index of float array
    
        arr[0] = static_cast<int>(size+2);
        
        //load in median to second index of float array
        arr[1] = median;
    }
    
    for(int i=0; i<size+2; i++)
    {
        cout << arr[i];
    }
    
return arr;
}   
    
  
